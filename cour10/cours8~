#!//home/lui/anaconda/bin/python
#-*- coding:utf-8 -*-


from random import random
import numpy as np
import matplotlib.pyplot as plt


params=(0,1)

#
#
#                    [ b[1][1] b[2][1] ]
#                    [ b[1][2] b[2][2] ]
# [ a[1][1]  a[2][1] ]
# [ a[1][2]  a[2][2] ]
#
#

def product(m1,m2):
    C1=m1.shape[0] #?
    L1=m1.shape[1] #?
    C2=m2.shape[0] #?
    L2=m2.shape[1] #? (nombre de lignes de la matrice 2)
    m3=(np.ones((L1,C2))) #? (l1 ligne C2 colones)
    print m1, L1,C1,"\n\n",m2, L2,C2, "\n\n", m3,m3.shape
    if C1==L2:
        for i in range (L1):       # on parcourt m3
            for j in range (C2):   #

                for k in range(C1):
                        m3[i][j]+=m1[i][k]*m2[k][j]

        return(m3)
                
    else:
        return(0)

def moyenne(x):
    return sum(x)/len(x)


def produit_scalaire(x,y):
    if len(x)!=len(y):
        return(0)
    else:
        a=0
        for i in range(len(x)):
           a+=x[i]*y[i]
        return(a)

def variance(x):
    l=0.00
    i=0
    m=moyenne(x)
    if len(x)-1<=0:
        return(0)
    else:
        while i < len(x):
            l+=(x[i]-m)**2
            i=i+1
        return(l/i)



def covariance(x,y):
    l=0.00
    i=0
    mx=moyenne(x)
    my=moyenne(y)
    if len(x)-1<=0:
        return(0)
    else:
        while i < len(x):
            l+=(x[i]-mx)*(y[i]-my)
            i=i+1
        return(l/i)


def Matrice_covariance_2D(x,y):
    return(np.array([[covariance(x,x),covariance(x,y)],[covariance(y,x),covariance(y,y)]]))


def linear_parameters(x,y):
    teta_1=0.00
    teta_0=0.00
    teta_1= covariance(x,y)/variance(x)
    teta_0= moyenne(y)-teta_1*moyenne(x)
    return(teta_1,teta_0)

x= 10*np.random.random(100)
y= params[0] + params[1]*x + np.random.normal(size=len(x))
M= Matrice_covariance_2D(x,y)
eig_val, eig_vec = np.linalg.eig(M)


print "moyenne :\n",moyenne(x),"\n"
print "produit_scalaire :\n" ,produit_scalaire(x,y),"\n"
print "vaiance :\n", variance(x),"\n"
print "covariance :\n", covariance(x,y),"\n"
print "Matrice de covariance :\n", Matrice_covariance_2D(x,y),"\n"
print "linear_parameters :\n",linear_parameters(x,y),"\n"
for i in range(2):
    print 'Ã  la valeur propre', eig_val[i], 'correspond le vecteur\n', eig_vec[:,i],"\n"


plt.scatter(x, y, color="blue")
plt.scatter(x,x*linear_parameters(x,y)[0]+linear_parameters(x,y)[1], color="red") 
plt.show()

m1=(np.array([[1,2],[3,4],[4,5]]))
m2=(np.array([[1,2,3],[4,5,6]]))

print product(m1,m2)

    
