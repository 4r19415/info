#!//home/lui/anaconda/bin/python
#-*- coding:utf-8 -*-


from random import random
import numpy as np
import matplotlib.pyplot as plt


params=(0,1)

def moyenne(x):
    return sum(x)/len(x)


def produit_scalaire(x,y):
    if len(x)!=len(y):
        return(0)
    else:
        a=0
        for i in range(len(x)):
           a+=x[i]*y[i]
        return(a)

def variance(x):
    l=0.00
    i=0
    m=moyenne(x)
    if len(x)-1<=0:
        return(0)
    else:
        while i < len(x):
            l+=(x[i]-m)**2
            i=i+1
        return(l/i)



def covariance(x,y):
    l=0.00
    i=0
    mx=moyenne(x)
    my=moyenne(y)
    if len(x)-1<=0:
        return(0)
    else:
        while i < len(x):
            l+=(x[i]-mx)*(y[i]-my)
            i=i+1
        return(l/i)


def Matrice_covariance_2D(x,y):
    return(np.array([[covariance(x,x),covariance(x,y)],[covariance(y,x),covariance(y,y)]]))


def linear_parameters(x,y):
    teta_1=0.00
    teta_0=0.00
    teta_1= covariance(x,y)/variance(x)
    teta_0= moyenne(y)-teta_1*moyenne(x)
    return(teta_1,teta_0)

x= 10*np.random.random(100)
y= params[0] + params[1]*x + np.random.normal(size=len(x))
M= Matrice_covariance_2D(x,y)
eig_val, eig_vec = np.linalg.eig(M)


print "moyenne :\n",moyenne(x),"\n"
print "produit_scalaire :\n" ,produit_scalaire(x,y),"\n"
print "vaiance :\n", variance(x),"\n"
print "covariance :\n", covariance(x,y),"\n"
print "Matrice de covariance :\n", Matrice_covariance_2D(x,y),"\n"
print "linear_parameters :\n",linear_parameters(x,y),"\n"
for i in range(2):
    print 'Ã  la valeur propre', eig_val[i], 'correspond le vecteur\n', eig_vec[:,i]


plt.scatter(x, y, color="blue")
plt.scatter(x,x*linear_parameters(x,y)[0]+linear_parameters(x,y)[1], color="red") 
plt.show()



    
